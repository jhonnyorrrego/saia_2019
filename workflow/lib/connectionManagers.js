function ConnectorManager(){this.connectors=[];this.connectionPoints=[];this.connectionPointCurrentId=0;this.glues=[];this.connectionMode=ConnectorManager.MODE_DISABLED}ConnectorManager.load=function(d){var c=new ConnectorManager();var b="";b+="\nCONNECTORS";c.connectors=Connector.loadArray(d.connectors);for(var a=0;a<c.connectors.length;a++){b+="\n"+c.connectors[a].toString()}b+="\nCONNECTION POINTS";c.connectionPoints=ConnectionPoint.loadArray(d.connectionPoints);for(var a=0;a<c.connectionPoints.length;a++){b+="\n"+c.connectionPoints[a].toString()}c.connectionPointCurrentId=d.connectionPointCurrentId;b+="\nGLUES";c.glues=Glue.loadArray(d.glues);for(var a=0;a<c.glues.length;a++){b+="\n"+c.glues[a].toString()}c.connectionMode=d.connectionMode;return c};ConnectorManager.prototype={equals:function(a){if(!a instanceof ConnectorManager){return false}for(var b=0;b<this.connectors.length;b++){if(!this.connectors[b].equals(a.connectors[b])){return false}}for(var b=0;b<this.connectionPoints.length;b++){if(!this.connectionPoints[b].equals(a.connectionPoints[b])){return false}}for(var b=0;b<this.glues.length;b++){if(!this.glues[b].equals(a.glues[b])){return false}}return this.connectionPointCurrentId==a.connectionPointCurrentId&&this.connectionMode==a.connectionMode},toSVG:function(){var b="";for(var a=0;a<this.connectors.length;a++){b+=this.connectors[a].toSVG()}return b},connectorCreate:function(d,a,b){var f=stack.currentId++;this.connectors.push(new Connector(d,a,b,f));this.connectionPointCreate(f,d,ConnectionPoint.TYPE_CONNECTOR);this.connectionPointCreate(f,a,ConnectionPoint.TYPE_CONNECTOR);var e=this.connectorGetById(f);return f},connectorRemove:function(a){for(var b=0;b<this.connectors.length;b++){if(this.connectors[b]==a){this.connectors.splice(b,1);this.glueRemoveAllBySecondId(this.connectionPointGetAllByParent(a.id)[0].id);this.glueRemoveAllBySecondId(this.connectionPointGetAllByParent(a.id)[1].id);this.connectionPointRemoveAllByParent(a.id);if(this.connectorSelectedIndex==b){this.connectorSelectedIndex=-1}break}}},connectorRemoveById:function(a){for(var b=0;b<this.connectors.length;b++){if(this.connectors[b].id==a){this.connectorRemove(this.connectors[b]);break}}},connectorRemoveByIdCascade:function(a){var c=this.connectionPointGetAllByParent(a);for(var b=0;b<c.length;b++){this.glueRemoveAllBySecondId(c[b].id)}this.connectionPointRemoveAllByParent(a);this.connectorRemoveById(a)},connectorPaint:function(e,c){for(var d=0;d<this.connectors.length;d++){if(this.connectors[d].id==c){e.save();if(this.connectors[d].style.lineWidth==null){this.connectors[d].style.lineWidth=1}var b=this.connectors[d].style.clone();var a=this.connectors[d].style.lineWidth;this.connectors[d].style=new Style();this.connectors[d].style.lineWidth=parseInt(a)+2;this.connectors[d].style.strokeStyle="lime";this.connectors[d].paint(e);this.connectors[d].style=b;e.restore();this.connectionPointPaint(e,this.connectors[d].id)}e.save();this.connectors[d].paint(e);e.restore();if(d==this.connectorSelectedIndex){HandleManager.figureSet(this.connectors[d]);HandleManager.paint(e)}}},connectorDisconnect:function(a){if(this.connectionPointHasGlues(a)){this.glueRemove(a)}},connectorConnect:function(d,c){d.color=ConnectionPoint.CONNECTED_COLOR;c.color=ConnectionPoint.CONNECTED_COLOR;var a;var e;if(d.type==ConnectionPoint.TYPE_FIGURE){a=d;e=c}else{a=c;e=d}e.point.x=a.point.x;e.point.y=a.point.y;if(!this.connectionPointIsConnected(e.id,a.id)){this.glueCreate(e.id,a.id)}var b=this.connectorGetById(e.parentId);if(b!=null){if(this.connectionPointHasGlues(this.connectionPointGetAllByParent(b.id)[0].id)&&this.connectionPointHasGlues(this.connectionPointGetAllByParent(b.id)[1].id)&&b.type==Connector.TYPE_JAGGED){alert("Problem connector has "+b.turningPoints.length+" points");b.jaggedReloaded();b.redraw()}}},connectorSelectXY:function(a,c){this.connectorSelectedIndex=-1;for(var b=0;b<this.connectors.length;b++){if(this.connectors[b].contains(a,c)){this.connectorSelectedIndex=b;break}}},connectorGetSelected:function(){if(this.connectorSelectedIndex!=-1){return this.connectors[this.connectorSelectedIndex]}return null},connectorGetById:function(a){for(var b=0;b<this.connectors.length;b++){if(this.connectors[b].id==a){return this.connectors[b]}}return null},connectorGetByXY:function(a,d){var c=-1;for(var b=0;b<this.connectors.length;b++){if(this.connectors[b].contains(a,d)){c=this.connectors[b].id;break}}return c},connectorAdjustByConnectionPoint:function(an,ai,ah){var S=this.connectionPointGetById(an);Log.debug("connectorAdjustByConnectionPoint() - Cp is :"+S);var s=this.connectorGetById(S.parentId);var H=this.connectionPointGetAllByParent(s.id);if(s.type==Connector.TYPE_STRAIGHT){var R=H[0].point.clone();var I=H[1].point.clone();s.turningPoints=[R,I]}else{if(s.type==Connector.TYPE_JAGGED){var aq=20;var R=H[0].point.clone();var af=null;var aa=null;var I=H[1].point.clone();var aj=null;var V=null;var U=CONNECTOR_MANAGER.glueGetBySecondConnectionPointId(H[0].id)[0];if(U!=null){var o=this.connectionPointGetById(U.id1);af=stack.figureGetById(o.parentId);var ac=af.getBounds();var at=null;at=new Point(R.x,ac[1]-FIGURE_ESCAPE_DISTANCE);aa=at;at=new Point(ac[2]+FIGURE_ESCAPE_DISTANCE,R.y);if(Util.distance(R,at)<Util.distance(R,aa)){aa=at}at=new Point(R.x,ac[3]+FIGURE_ESCAPE_DISTANCE);if(Util.distance(R,at)<Util.distance(R,aa)){aa=at}at=new Point(ac[0]-FIGURE_ESCAPE_DISTANCE,R.y);if(Util.distance(R,at)<Util.distance(R,aa)){aa=at}}var M=CONNECTOR_MANAGER.glueGetBySecondConnectionPointId(H[1].id);if(M.length>0){U=M[0];Log.debug("connectorAdjustByConnectionPoint() - glue is "+U);o=this.connectionPointGetById(U.id1);aj=stack.figureGetById(o.parentId);Log.debug("connectorAdjustByConnectionPoint() - figure is "+aj);ac=aj.getBounds();at=null;at=new Point(I.x,ac[1]-FIGURE_ESCAPE_DISTANCE);V=at;at=new Point(ac[2]+FIGURE_ESCAPE_DISTANCE,I.y);if(Util.distance(I,at)<Util.distance(I,V)){V=at}at=new Point(I.x,ac[3]+FIGURE_ESCAPE_DISTANCE);if(Util.distance(I,at)<Util.distance(I,V)){V=at}at=new Point(ac[0]-FIGURE_ESCAPE_DISTANCE,I.y);if(Util.distance(I,at)<Util.distance(I,V)){V=at}}else{Log.debug("connectorAdjustByConnectionPoint() - There is NO figure at the end")}var ag=[R,I];var Y=0;if(aa!=null){Log.debug("ConnectionManage:connectorAdjustByConnectionPoint() - startExitPoint:  "+aa);ag.splice(Y+1,0,aa);Y++}if(V!=null){Log.debug("ConnectionManage:connectorAdjustByConnectionPoint() - endExitPoint:  "+V);ag.splice(Y+1,0,V)}s.turningPoints=ag;if(ag[Y].x==ag[Y+1].x||ag[Y].y==ag[Y+1].y){var d=false;if(af!=null){if(Util.lineIntersectsRectangle(ag[Y],ag[Y+1],af.getBounds())){d=true}}if(aj!=null){if(Util.lineIntersectsRectangle(ag[Y],ag[Y+1],aj.getBounds())){d=true}}if(!d){s.updateMiddleText();return}}var T=[];var aw=null;var b=new Point(ag[Y+1].x,ag[Y].y);var am=Point.cloneArray(ag);am.splice(Y+1,0,b);if(this._validPath(am)){T.push(am)}var a=new Point(ag[Y].x,ag[Y+1].y);var ak=Point.cloneArray(ag);ak.splice(Y+1,0,a);if(this._validPath(ak)){T.push(ak)}var q=this._scorePath(am,true);var i=this._scorePath(ak,true);if(q>=0&&q>=i){aw=b}else{if(i>=0&&i>=q){aw=a}}if(aw!=null){var d=false;var al=Point.cloneArray(ag);al.splice(Y+1,0,aw);var N=1;var t=al.length-2;if(af==null){N=0}if(aj==null){t=al.length-1}for(var ao=N;ao<t;ao++){if(af!=null){if(Util.lineIntersectsRectangle(al[ao],al[ao+1],af.getBounds())){d=true;break}}if(aj!=null){if(Util.lineIntersectsRectangle(al[ao],al[ao+1],aj.getBounds())){d=true;break}}}if(!d){s.turningPoints=al;s.updateMiddleText();return}}else{}var n=[];var ae=new Point((ag[Y].x+ag[Y+1].x)/2,ag[Y].y);var ab=new Point((ag[Y].x+ag[Y+1].x)/2,ag[Y+1].y);var K=Point.cloneArray(ag);K.splice(Y+1,0,ae,ab);if(this._validPath(K)){T.push(K);var r=false;for(var ar=1;ar<K.length-2;ar++){if((af!=null&&Util.lineIntersectsRectangle(K[ar],K[ar+1],af.getBounds()))||(aj!=null&&Util.lineIntersectsRectangle(K[ar],K[ar+1],aj.getBounds()))){r=true;break}}if(!r){n.push(K)}Log.debug("S2 I valid")}else{Log.debug("S2 I not valid")}var g=new Point(ag[Y].x,(ag[Y].y+ag[Y+1].y)/2);var f=new Point(ag[Y+1].x,(ag[Y].y+ag[Y+1].y)/2);var E=Point.cloneArray(ag);E.splice(Y+1,0,g,f);if(this._validPath(E)){T.push(E);var P=false;for(var ar=1;ar<E.length-2;ar++){if((af!=null&&Util.lineIntersectsRectangle(E[ar],E[ar+1],af.getBounds()))||(aj!=null&&Util.lineIntersectsRectangle(E[ar],E[ar+1],aj.getBounds()))){P=true;break}}if(!P){n.push(E)}Log.debug("S2 II valid")}else{Log.debug("S2 II not valid")}var av=[];if(af!=null){av.push(af.getBounds()[2]+20)}if(aj!=null){av.push(aj.getBounds()[2]+20)}if(av.length!=0){var ad=Util.max(av);var A=new Point(ad,ag[Y].y);var u=new Point(ad,ag[Y+1].y);var e=Point.cloneArray(ag);e.splice(Y+1,0,A,u);if(this._validPath(e)){T.push(e);Log.debug("S2 III valid");var Z=false;for(var ar=1;ar<e.length-2;ar++){if((af!=null&&Util.lineIntersectsRectangle(e[ar],e[ar+1],af.getBounds()))||(aj!=null&&Util.lineIntersectsRectangle(e[ar],e[ar+1],aj.getBounds()))){Z=true;break}}if(!Z){n.push(e)}}else{Log.debug("S2 III not valid")}}Log.debug("Start S2 IV solution");var z=[];if(af!=null){z.push(af.getBounds()[1]-20)}if(aj!=null){z.push(aj.getBounds()[1]-20)}Log.debug("S2 IV test North exit points");if(z.length!=0){Log.debug("S2 IV we have  North points");var C=Util.min(z);var X=new Point(ag[Y].x,C);var W=new Point(ag[Y+1].x,C);var m=Point.cloneArray(ag);m.splice(Y+1,0,X,W);if(this._validPath(m)){T.push(m);Log.debug("S2 IV valid");var l=false;for(var ar=1;ar<m.length-2;ar++){if((af!=null&&Util.lineIntersectsRectangle(m[ar],m[ar+1],af.getBounds()))||(aj!=null&&Util.lineIntersectsRectangle(m[ar],m[ar+1],aj.getBounds()))){l=true;break}}if(!l){n.push(m);Log.debug("S2 IV pure")}else{Log.debug("S2 IV NOT pure")}}else{Log.debug("S2 IV not valid")}}else{Log.debug("No North (S2 IV) points")}var au=[];if(af!=null){au.push(af.getBounds()[0]-20)}if(aj!=null){av.push(aj.getBounds()[0]-20)}if(au.length!=0){var h=Util.min(au);var B=new Point(h,ag[Y].y);var w=new Point(h,ag[Y+1].y);var D=Point.cloneArray(ag);D.splice(Y+1,0,B,w);if(this._validPath(D)){T.push(D);Log.debug("S2 V valid");var ap=false;for(var ar=1;ar<D.length-2;ar++){if((af!=null&&Util.lineIntersectsRectangle(D[ar],D[ar+1],af.getBounds()))||(aj!=null&&Util.lineIntersectsRectangle(D[ar],D[ar+1],aj.getBounds()))){ap=true;break}}if(!ap){n.push(D)}}else{Log.debug("S2 V not valid")}}var O=[];if(af!=null){O.push(af.getBounds()[3]+20)}if(aj!=null){O.push(aj.getBounds()[3]+20)}if(O.length!=0){var G=Util.max(O);var L=new Point(ag[Y].x,G);var J=new Point(ag[Y+1].x,G);var c=Point.cloneArray(ag);c.splice(Y+1,0,L,J);if(this._validPath(c)){T.push(c);Log.debug("S2 VI valid");var Q=false;for(var ar=1;ar<c.length-2;ar++){if((af!=null&&Util.lineIntersectsRectangle(c[ar],c[ar+1],af.getBounds()))||(aj!=null&&Util.lineIntersectsRectangle(c[ar],c[ar+1],aj.getBounds()))){Q=true;break}}if(!Q){n.push(c)}}else{Log.debug("S2 VI not valid")}}if(n.length>1){var F=false;while(!F){F=true;for(k=0;k<n.length-1;k++){if(Util.getPolylineLength(n[k])>Util.getPolylineLength(n[k+1])){var v=n[k];n[k]=n[k+1];n[k+1]=v;F=false}}}}Log.info("Pure solution : "+n.length+" Impure solutions : "+T.length);if(n.length>0){s.turningPoints=n[0]}else{s.turningPoints=T[0]}}}s.updateMiddleText()},_scorePath:function(b,a){var e=b.length;if(e<3){return -1}var d=0;for(var c=1;c<e-1;c++){if(b[c-1].x==b[c].x&&b[c].x==b[c+1].x){if(signum(b[c+1].y-b[c].y)==signum(b[c].y-b[c-1].y)){if(a){d++}}else{return -1}}else{if(b[c-1].y==b[c].y&&b[c].y==b[c+1].y){if(signum(b[c+1].x-b[c].x)==signum(b[c].x-b[c-1].x)){if(a){d++}}else{return -1}}else{if(!a){d++}}}}return d},_validPath:function(a){var c=a.length;if(c<3){return false}for(var b=1;b<c-1;b++){if(a[b-1].x==a[b].x&&a[b].x==a[b+1].x){if(signum(a[b+1].y-a[b].y)!=signum(a[b].y-a[b-1].y)){return false}}else{if(a[b-1].y==a[b].y&&a[b].y==a[b+1].y){if(signum(a[b+1].x-a[b].x)!=signum(a[b].x-a[b-1].x)){return false}}}}return true},reset:function(){this.connectors=[];this.connectorSelectedIndex=-1;this.connectionPoints=[];this.connectionPointSelectedIndex=-1;this.connectionPointCurrentId=0},mouseDown_deprecated:function(a,g){var e=this.connectorGetSelected();this.connectionPointSelectXY(a,g,ConnectionPoint.TYPE_CONNECTOR);var d=this.connectionPointGetSelected();var c;if(e!=null){c=this.connectionPointOver(a,g,-e.id);if(this.connectionMode!=ConnectorManager.MODE_SECOND){if(this.connectionPointOver(a,g,e.id)!=null){e.activeConnectionPointId=this.connectionPointOver(a,g,e.id).id}else{e.activeConnectionPointId=-1}}}else{c=this.connectionPointOver(a,g)}if(this.connectionMode==ConnectorManager.MODE_FIRST){var f=this.connectorCreate(new Point(a,g),new Point(a,g),connectorType);this.connectorSelectedIndex=this.connectors.length-1;e=this.connectorGetSelected();e.activeConnectionPointId=this.connectionPointGetAllByParent(e.id)[1].id;alert("connection manager:mouseDown: connector has "+e.turningPoints.length+" turning points");if(c){this.connectorConnect(this.connectionPointGetAllByParent(e.id)[0],c)}alert("connection manager 2:mouseDown: connector has "+e.turningPoints.length+" turning points");setUpEditPanel(e);d=null;this.connectionMode=ConnectorManager.MODE_SECOND}else{if(e!=null){drag=true;HandleManager.handleSelectXY(a,g);stack.figureSelectedIndex=-1;var b=this.connectionPointOver(a,g,e.id);this.connectionMode=ConnectorManager.MODE_DRAG}}stack.figureSelectedIndex=-1;return true},mouseUp_deprecated:function(a,f){var d=this.connectorGetSelected();var c=this.connectionPointOverByType(a,f,ConnectionPoint.TYPE_FIGURE);var b=this.connectionPointGetSelected();if(this.connectionMode==ConnectorManager.MODE_DRAG){if(b!=null&&(c==null||(this.connectionPointHasGlues(b.id)&&!this.connectionPointIsConnected(b.id,c.id)))){this.connectorDisconnect(b.id)}}else{if(this.connectionMode==ConnectorManager.MODE_SECOND){if(c&&c.type==ConnectionPoint.TYPE_FIGURE){this.connectorConnect(c,this.connectionPointGetAllByParent(d.id)[1]);b=null}b=null;this.connectionMode=ConnectorManager.MODE_DISABLED}}if(c&&this.connectionMode==ConnectorManager.MODE_DRAG){if(c&&b!=c&&d.activeConnectionPointId!=-1){var e=this.glueGetByConnectionPointId(d.activeConnectionPointId)[0];if(!e||(e.id1!=c.id&&e.id2!=c.id)){this.connectorConnect(this.connectionPointGet(d.activeConnectionPointId),c);this.connectionPointSelectedIndex=-1}}if(this.connectorGetMouseOver(a,f)!=d){this.connectorSelectedIndex=-1}}if(this.connectionMode!=ConnectorManager.MODE_SECOND){this.connectionMode=ConnectorManager.MODE_DISABLED}},mouseMove_deprecated:function(a,h){var g=false;var d=this.connectionPointGetSelected();var f=this.connectorGetSelected();var c;if(f){c=this.connectionPointOver(a,h,-f.id)}else{c=this.connectionPointOver(a,h)}if(this.connectionMode!=ConnectorManager.MODE_DISABLED){if(c&&this.glueGetByConnectionPointId(c.id).length==0){c.color=ConnectionPoint.OVER_COLOR}g=true}if(this.connectionMode==ConnectorManager.MODE_DRAG){var e=generateMoveMatrix(f,a,h);if(f.activeConnectionPointId!=-1){f.adjust(e,this.connectionPointGet(f.activeConnectionPointId).point)}else{if(!this.connectionPointHasGlues(this.connectionPointGetAllByParent(f.id)[0].id)&&!this.connectionPointHasGlues(this.connectionPointGetAllByParent(f.id)[1].id)){f.transform(e)}}g=true}if(this.connectionMode==ConnectorManager.MODE_SECOND){var b=f.turningPoints[f.turningPoints.length-1];if(f.turningPoints.length==2&&f.type=="jagged"){b=f.turningPoints.pop();f.turningPoints.push(new Point(b.x,f.turningPoints[0].y));f.turningPoints.push(b)}f.adjust(Matrix.translationMatrix(a-b.x,h-b.y),b);g=true}return g},connectionPointGetSelected:function(){if(this.connectionPointSelectedIndex==-1){return null}return this.connectionPoints[this.connectionPointSelectedIndex]},connectionPointGetByXY:function(a,e,c){var d=-1;for(var b=0;b<this.connectionPoints.length;b++){if(this.connectionPoints[b].contains(a,e)&&this.connectionPoints[b].type==c){d=this.connectionPoints[b].id;break}}return d},connectionPointCreate:function(d,a,b){var c=new ConnectionPoint(d,a.clone(),this.connectionPointCurrentId++,b);this.connectionPoints.push(c);return c},connectionPointRemoveAllByParent:function(b){for(var a=0;a<this.connectionPoints.length;a++){if(this.connectionPoints[a].parentId==b){this.connectionPoints.splice(a,1);a--}}},connectionPointGetById:function(b){for(var a=0;a<this.connectionPoints.length;a++){if(this.connectionPoints[a].id==b){return this.connectionPoints[a]}}return null},connectionPointGetByParentAndCoordinates:function(d,a,c){for(var b=0;b<this.connectionPoints.length;b++){if(this.connectionPoints[b].parentId==d&&this.connectionPoints[b].point.x==a&&this.connectionPoints[b].point.y==c){return this.connectionPoints[b]}}return null},connectionPointGetAllByParent:function(c){var a=[];for(var b in this.connectionPoints){if(this.connectionPoints[b].parentId==c){a.push(this.connectionPoints[b])}}return a},connectionPointOverByType:function(a,d){var c=[];for(var b=0;b<this.connectionPoints.length;b++){if(this.connectionPoints[b].contains(a,d)){c.push(this.connectionPoints[b])}}return c},connectionPointOver:function(a,h,c){var d=null;if(typeof(c)=="number"){if(c<0){for(var b in this.connectionPoints){if(this.connectionPoints[b].parentId!=-c&&this.connectionPoints[b].contains(a,h)){this.connectionPoints[b].color=ConnectionPoint.OVER_COLOR;d=this.connectionPoints[b]}}}else{var f=this.connectionPointGetAllByParent(c);for(var g in f){if(f[g].contains(a,h)){f[g].color=ConnectionPoint.OVER_COLOR;d=f[g]}}}}else{for(var e in this.connectionPoints){if(this.connectionPoints[e].contains(a,h)){this.connectionPoints[e].color=ConnectionPoint.OVER_COLOR;d=this.connectionPoints[e]}}}return d},connectionPointPaint:function(b,a){var c=this.connectionPointGetAllByParent(a);for(var d in c){c[d].paint(b)}},connectionPointTransform:function(b,c){var g=this.connectionPointGetAllByParent(b);for(var e=0;e<g.length;e++){g[e].transform(c);var a=this.glueGetByFirstConnectionPointId(g[e].id);for(var d=0;d<a.length;d++){var f=this.connectionPointGetById(a[d].id2);f.transform(c);this.connectorAdjustByConnectionPoint(a[d].id2)}}},connectionPointIsConnected:function(c,b){for(var a=0;a<this.glues.length;a++){if((c==this.glues[a].id1&&b==this.glues[a].id2)||(c==this.glues[a].id2&&b==this.glues[a].id1)){return true}}return false},connectionPointUnhighlightAll:function(c,g){for(var d=0;d<this.connectionPoints.length;d++){var f=this.connectionPoints[d].type;if(f==ConnectionPoint.TYPE_FIGURE){f=ConnectionPoint.TYPE_CONNECTOR}else{f=ConnectionPoint.TYPE_FIGURE}var e=false;if(this.connectionPointHasGlues(this.connectionPoints[d].id)){var b=this.connectionPointOverByType(this.connectionPoints[d].point.x,this.connectionPoints[d].point.y,f);if(b&&(b.id==this.glueGetByConnectionPointId(this.connectionPoints[d].id)[0].id1||b.id==this.glueGetByConnectionPointId(this.connectionPoints[d].id)[0].id2)){this.connectionPoints[d].color=ConnectionPoint.CONNECTED_COLOR;e=true}}if(!e&&this.connectionPointOverByType(c,g,ConnectionPoint.TYPE_FIGURE)==this.connectionPoints[d]){this.connectionPoints[d].color=ConnectionPoint.OVER_COLOR}else{if(!e){this.connectionPoints[d].color=ConnectionPoint.NORMAL_COLOR}}}if(this.connectionPointOverByType(c,g,ConnectionPoint.TYPE_FIGURE)&&this.connectorGetSelected()){if(this.connectorGetSelected().activeConnectionPointId!=-1){var b=this.connectionPointOverByType(c,g,ConnectionPoint.TYPE_FIGURE);var a=this.glueGetByConnectionPointId(this.connectorGetSelected().activeConnectionPointId);if(a.length==0||(a[0].id1!=b.id&&a[0].id2!=b.id)){this.connectionPointGet(this.connectorGetSelected().activeConnectionPointId).color=ConnectionPoint.OVER_COLOR}}}},connectionPointHasGlues:function(b){for(var a=0;a<this.glues.length;a++){if(b==this.glues[a].id1||b==this.glues[a].id2){return true}}return false},glueGetByFirstConnectionPointId:function(a){var c=[];for(var b=0;b<this.glues.length;b++){if(this.glues[b].id1==a){c.push(this.glues[b])}}return c},glueGetBySecondConnectionPointId:function(a){var c=[];for(var b=0;b<this.glues.length;b++){if(this.glues[b].id2==a){c.push(this.glues[b])}}return c},glueCreate:function(b,a){var c=new Glue(b,a);this.glues.push(c);return c},glueRemoveByIds:function(c,b){for(var a=0;a<this.glues.length;a++){if(c==this.glues[a].id1&&b==this.glues[a].id2){this.glues.splice(a,1)}}},glueRemoveAllByFirstId:function(b){for(var a=0;a<this.glues.length;a++){if(b==this.glues[a].id1){this.glues.splice(a,1)}}},glueRemoveAllBySecondId:function(b){for(var a=0;a<this.glues.length;a++){if(b==this.glues[a].id2){this.glues.splice(a,1)}}},glueGetAllByIds:function(c,b){var d=[];for(var a=0;a<this.glues.length;a++){if(this.glues[a].id1==c&&this.glues[a].id2==b){d.push(this.glues[a])}}return d}};